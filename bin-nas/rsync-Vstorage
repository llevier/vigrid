#!/bin/sh
#################################################################################################################################
#
# This material is part of VIGRID extensions to GNS3 for Trainings & CyberRange designs
#
# (c) Laurent LEVIER for script, designs and technical actions, https://github.com/llevier/
# LICENCE: Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA)
#
# Each dependancies (c) to their respective owners
#
#################################################################################################################################


PROGRESS="--progress"
#PROGRESS=""

# creating dataset missing on target FS
ZFS_LIST=`zfs list -r Vstorage -o name |tail -n+2`
for i in $ZFS_LIST
do
  TARGET=`echo $i | sed 's/Vstorage/Vstorage_BKP/'`

  [ "x$PROGRESS" != "x" ] && echo "Identified dataset: $i"

  [ "x$PROGRESS" != "x" ] && echo "  Checking for $TARGET..."

  CHK=`zfs list $TARGET -o name 2>/dev/null`
  if [ "x$CHK" = "x" ]
  then
    [ "x$PROGRESS" != "x" ] && echo -n "    $TARGET dataset does not exist"

    if [ -d "/$TARGET" ]
    then
      [ "x$PROGRESS" != "x" ] && echo -n " but /$TARGET exists, erasing it... "
      rm -rf /$TARGET
    fi

    [ "x$PROGRESS" != "x" ] && echo " creating dataset $TARGET..." && echo
    zfs create $TARGET
    [ $? -ne 0 ] && echo "ZFS create $TARGET failed !" && sleep 5
  fi
done

echo

# destroy useless datasets on target FS
ZFS_LIST=`zfs list -r -o name Vstorage_BKP |tail -n+2`
for i in $ZFS_LIST
do
  SOURCE=`echo $i | sed 's/Vstorage_BKP/Vstorage/'`

  [ "x$PROGRESS" != "x" ] && echo "Identified dataset: $i"

  [ "x$PROGRESS" != "x" ] && echo "  Checking for $SOURCE..."

  CHK=`zfs list $SOURCE -o name 2>/dev/null`
  if [ "x$CHK" = "x" ]
  then
    [ "x$PROGRESS" != "x" ] && echo "    $SOURCE dataset does not exist, destroying dataset $i..." && echo

    zfs destroy -r $i
    [ $? -ne 0 ] && echo "ZFS destroy $i failed !" && sleep 5
  fi
done

[ "x$PROGRESS" != "x" ] && echo

echo "  Rsyncing /Vstorage to /Vstorage_BKP..."
echo "    Deletions first..."
rsync -r --delete --existing --ignore-existing --ignore-errors --delete-before --delete-excluded --force --max-delete=5000000 --timeout 7200 $PROGRESS /Vstorage/ /Vstorage_BKP/

echo "    ...then data..."
rsync -EAXDtogrHpav --force --numeric-ids --force $PROGRESS --inplace /Vstorage/ /Vstorage_BKP/

