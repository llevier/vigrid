# Normal (Prod) WWW

################################################################################################################################
#
# This material is part of VIGRID extensions to GNS3 for Trainings & CyberRange designs
#
# (c) Laurent LEVIER for script, designs and technical actions, https://github.com/llevier/
# LICENCE: Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA)
#
# Each dependancies (c) to their respective owners
#
#################################################################################################################################
server {
  listen 443 ssl default;
  server_name hostname.domainname;

  # LetsEncrypt: echo "/home/gns3/vigrid/www/letsencrypt" | certbot certonly --dry-run --webroot -d hostname.domainname
  #
  # Take fullchain here, not cert.pem
  ssl_certificate      /etc/letsencrypt/live/hostname.domainname/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/hostname.domainname/privkey.pem;

  ssl_session_cache    builtin:1000 shared:SSL:1m;
  ssl_session_timeout  5m;

  ssl_protocols   TLSv1.2;
  ssl_ciphers  HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers  on;

  # hide version
  server_tokens        off;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  root   /home/gns3/vigrid/www/site;
  index  index.html index.htm index.php;

  # prevent BoF attacks
  #client_body_buffer_size  1k;
  #client_header_buffer_size 1k;
  #client_max_body_size 8m;
  #large_client_header_buffers 2 1k;

  # limit #clients from same source IP ?
  # in http section:   limit_conn_zone $binary_remote_addr zone=addr:5m;
  # in server section: limit_conn addr value;

  # non-GNS3 Web pages
  location /
  {
    # Basic authentication
    auth_basic "Hostname's access, who are you ?";
    auth_basic_user_file /home/gns3/users-htpasswd;

    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    # sanity
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { log_not_found off; }

    location ~ \.css  { add_header Content-Type text/css; }
    location ~ \.js   { add_header Content-Type application/x-javascript; }
    location ~ \.eot  { add_header Content-Type application/vnd.ms-fontobject; }
    location ~ \.woff { add_header Content-Type font/woff; }

    location ~* \.(htm|html|php)$
    {
      try_files $uri =404;
      fastcgi_split_path_info       ^(.+\.html)(/.+)$;
      fastcgi_index                 index.html;
      fastcgi_pass                  unix:/run/php/php7.4-fpm.sock;
      # Minimum output buffering
      fastcgi_buffers               2 4k;
      fastcgi_busy_buffers_size     4k;
      # fastcgi_buffer_size           8k; 
      # fastcgi_buffering             off;
      include                       /etc/nginx/fastcgi_params;
      fastcgi_param PATH_INFO       $fastcgi_path_info;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
  }

  # Web UI
  location /static
  {
    # Basic authentication
    auth_basic "Hostname's access, who are you ?";
    auth_basic_user_file /home/gns3/users-htpasswd;

    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    proxy_pass http://localhost:3080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }
  # GNS Heavy client
  location /v2
  {
    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    proxy_pass http://localhost:3080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  # GNS Heavy client
  location /v3
  {
    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    proxy_pass http://localhost:3080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  # http://host/console/port/ -> http://host:port (websocket)
  location /noTELNET
  {
    # Basic authentication
    auth_basic "Hostname's access, who are you ?";
    auth_basic_user_file /home/gns3/users-htpasswd;

    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    # rewrite     ^/noTELNET/([0-9]*)/(.*)$ /noTELNET/$1/$2$is_args$args break;
    rewrite     ^/noTELNET/(.*)$ /noTELNET/$1$is_args$args break;
    
    # proxy_pass  http://$server_addr:$1/$2$is_args$args;
    proxy_pass  http://$server_addr:$1$is_args$args;
    proxy_redirect off;

    # websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;  
  }

  # noVNC: host:port/path should also become host/console/port/path
  # http://host/console/port/path -> http://host:port/path (websocket)
  location /noVNC
  {
    # Basic authentication
    auth_basic "Hostname's access, who are you ?";
    auth_basic_user_file /home/gns3/users-htpasswd;

    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    # adding websockify path
    # rewrite     ^/noVNC/([0-9]*)/(.*)$ /noVNC/$1/$2$is_args$args&path=/noVNC/$1/websockify break;
    
    # rewrite to extract regex (port to redirect to)
    rewrite     ^/noVNC/([0-9]*)/(.*)$ /noVNC/$1/$2$is_args$args break;

    # sending to proxy
    proxy_pass  http://$server_addr:$1/$2$is_args$args;
    proxy_redirect off;

    # websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;  
  }

  location = /auth
  {
    internal;
    proxy_pass             http://localhost:8001;
    proxy_pass_request_body off;
    proxy_set_header        Content-Length "";
    proxy_set_header        X-Original-URI $request_uri;
    proxy_set_header        X-Original-Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Host $server_name;  
  }

  location ~ ^/(images|javascript|js|css|flash|media|static|font)/  {
    expires 7d;
  }

  location ~ /\.ht {
      deny  all;
  }

  try_files $uri $uri/ /index.html?$args /index.htm?$args /index.php?$args;
}

